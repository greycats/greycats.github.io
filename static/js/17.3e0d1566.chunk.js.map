{"version":3,"sources":["components/TextAndAnimation/index.js","components/CommentsCard/index.js","assets/imgs/dcom/Star.svg","views/CaseStudy/GS/Others.js"],"names":["AnimateTitle","id","hashCode","title","titleHeight","triggerRelativePosition","target","className","animations","from","height","to","AnimateText","intro","isSubTitle","classnames","opacity","top","delay","layoutType","subTitle","titleStyle","showLottie","showTitle","animateIcon","animateWidth","animateHeight","mobileAnimateWidth","mobileAnimateHeight","SubComponent","wrapMinHeight","animationStyle","mobileAnimationStyle","wrapStyle","isPC","window","style","minHeight","options","animationData","width","CommentsCard","commentList","overlayStyle","map","item","index","console","log","key","src","Star","content","name","date","position","duration","list","module","exports","GSData","designed","other","disclouse","padding","paddingTop","digDeeper","deeper","transform","higherQuality","review","marginBottom","device","document","body","offsetWidth","typeface","display","flexWrap","justifyContent","alignItems","animationList","mobileStyle","mobileImg","img","colors","paddingBottom","marginTop","grid","marginLeft","sitemap"],"mappings":"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","file":"static/js/17.3e0d1566.chunk.js","sourcesContent":["/*\n * @Author: Gary\n * @Date: 2019-11-18 14:09:53\n * @Last Modified by: Gary\n * @Last Modified time: 2020-01-08 15:10:08\n * layoutType:\n * 1.left-text\n * 2.right-text\n * 3.up-text\n */\nimport React from 'react'\nimport AnimationPlayer, { LottieAnimation } from 'components/AnimationPlayer'\nimport classnames from 'classnames'\n\nimport { hashCode } from 'utils'\nimport './index.sass'\n\nconst AnimateTitle = ({\n  id = hashCode(),\n  title,\n  titleHeight,\n  triggerRelativePosition\n}) => (\n    <AnimationPlayer\n      id={id}\n      target={\n        <div className=\"title-wrap\">\n          <div className=\"title\">{title}</div>\n        </div>\n      }\n      animations={[\n        {\n          from: {\n            height: 0\n          },\n          to: {\n            height: titleHeight\n          }\n        }\n      ]}\n      triggerRelativePosition={triggerRelativePosition}\n    />\n  )\n\nconst AnimateText = ({\n  id = hashCode(),\n  intro,\n  isSubTitle = '',\n  triggerRelativePosition\n}) => (\n    <AnimationPlayer\n      id={id}\n      target={\n        <div className={classnames(\"intro-wrap\", { 'sub-title': isSubTitle })}>\n          {intro}\n        </div>\n      }\n      animations={[\n        {\n          from: {\n            opacity: 0,\n            top: '-60px'\n          },\n          to: {\n            opacity: 1,\n            top: 0\n          },\n          delay: .3\n        }\n      ]}\n      triggerRelativePosition={triggerRelativePosition}\n    />\n  )\n\n\nexport default ({\n  layoutType = 'left-text',\n  id = hashCode(),\n  title = '',\n  subTitle = '',\n  intro = '',\n  titleStyle = {},\n  titleHeight = 60,\n  showLottie = true,\n  showTitle = true,\n  animateIcon = null,\n  animateWidth = 'auto',\n  animateHeight = 'auto',\n  mobileAnimateWidth = 'auto',\n  mobileAnimateHeight = 'auto',\n  SubComponent = null,\n  wrapMinHeight = '750px',\n  animationStyle = {},\n  mobileAnimationStyle = {},\n  wrapStyle = {},\n  triggerRelativePosition\n}) => {\n  const isPC = window.isPC\n  return (\n    <div className={classnames(\"text-animation-wrap\", !isPC ? 'up-text panel' : layoutType, { 'layout-1240': layoutType !== 'up-text' })} style={{ minHeight: wrapMinHeight, ...wrapStyle }}>\n      <div className=\"title-part\" style={titleStyle}>\n        {\n          !showTitle ? null :\n            <AnimateTitle id={id + '0'} title={title} titleHeight={isPC ? titleHeight : (titleHeight / 60 * 0.38 + 'rem')} triggerRelativePosition={triggerRelativePosition} />\n        }\n        {\n          subTitle ?\n            <AnimateText id={id + '1'} intro={subTitle} isSubTitle={subTitle} triggerRelativePosition={triggerRelativePosition} />\n            : null\n        }\n        <AnimateText id={id + '1'} intro={intro} />\n        {\n          SubComponent ? <SubComponent /> : null\n        }\n      </div>\n      <div className=\"animation-part\" style={isPC ? animationStyle : mobileAnimationStyle}>\n        {\n          showLottie ?\n            <LottieAnimation\n              options={{\n                animationData: animateIcon,\n              }}\n              width={isPC ? animateWidth : mobileAnimateWidth}\n              height={isPC ? animateHeight : mobileAnimateHeight}\n              triggerRelativePosition={triggerRelativePosition}\n            />\n            : null\n        }\n      </div>\n    </div >\n  )\n}","import React from 'react'\nimport AnimationPlayer from 'components/AnimationPlayer'\nimport Star from 'assets/imgs/dcom/Star.svg'\nimport { hashCode } from 'utils'\nimport MobileCarousel from 'components/MobileCarousel'\nimport './index.sass'\n\nconst isPC = window.isPC\n\nconst CommentsCard = ({ commentList, overlayStyle = {} }) =>\n  commentList.map((item, index) => {\n    console.log('overlaystyle is', overlayStyle)\n    return (\n      <div className='comment-card-item' key={index} style={{ ...overlayStyle }}>\n        <img className='card-star' src={Star} />\n        <div className='card-title'>{item.title}</div>\n        <div className='card-content'>{item.content}</div>\n        <div className='card-name'>{item.name}</div>\n        <div className='card-date'>{item.date}</div>\n      </div>\n    )\n  })\n\nconst PCComments = ({ commentList = [], id = hashCode('comment-card'), overlayStyle = {} }) => {\n  return (\n    <div className='comment-card-wrap'>\n      <AnimationPlayer\n        id={id}\n        target={\n          <div style={{ position: 'relative' }}>\n            <div className='comment-card-list'>\n              <CommentsCard commentList={commentList} overlayStyle={overlayStyle} />\n            </div>\n          </div>\n        }\n        triggerRelativePosition={{ top: '-100px' }}\n        animations={[\n          {\n            from: {\n              opacity: 0,\n              top: '100px',\n            },\n            to: {\n              opacity: 1,\n              top: 0,\n            },\n            duration: 1.5,\n          },\n        ]}\n      />\n    </div>\n  )\n}\n\nconst MobileComments = ({ commentList = [], overlayStyle = {} }) => {\n  return (\n    <div className='m-comment-card-wrap'>\n      <MobileCarousel list={CommentsCard({ commentList })} overlayStyle={overlayStyle} />\n    </div>\n  )\n}\n\nexport default isPC ? PCComments : MobileComments\n","module.exports = __webpack_public_path__ + \"static/media/Star.728eb5be.svg\";","import React, { useState, useEffect } from 'react'\nimport TextAndAnimation from 'components/TextAndAnimation'\nimport CommentsCard from 'components/CommentsCard'\nimport AnimationPlayer, { LottieAnimation } from 'components/AnimationPlayer'\n\n\nexport default ({ GSData }) => {\n  const isPC = window.isPC\n  return (\n    <div>\n      <TextAndAnimation\n        layoutType='left-text'\n        {...GSData.designed}\n        titleStyle={{\n          width: '520px'\n        }}\n        animateIcon={GSData.other.disclouse}\n        animationStyle={{\n          width: 720\n        }}\n        wrapStyle={isPC ? {\n          padding: 0\n        } : {\n            paddingTop: 0\n          }}\n        showTitle={false}\n      />\n\n      <TextAndAnimation\n        layoutType='left-text'\n        {...GSData.digDeeper}\n        titleStyle={{\n          width: '520px'\n        }}\n        animateIcon={GSData.other.deeper}\n        animationStyle={{\n          width: 720,\n          transform: 'translateY(-50px)',\n        }}\n      />\n\n      <TextAndAnimation\n        layoutType='left-text'\n        {...GSData.higherQuality}\n        titleStyle={{\n          width: '520px'\n        }}\n        animateIcon={GSData.other.review}\n        wrapStyle={isPC ? {\n          padding: '100px 0 50px'\n        } : {}}\n        animationStyle={{\n          width: 720,\n          transform: 'translateY(-160px)',\n        }}\n      />\n\n      <div style={isPC ? { height: 750, marginBottom: 70 } : { height: '1.5rem' }}>\n        <LottieAnimation\n          options={{\n            animationData: GSData.other.device\n          }}\n          width={document.body.offsetWidth > 1920 ? '1920px' : '100vw'}\n        />\n      </div>\n\n      <div className=\"layout-1240\">\n        <TextAndAnimation\n          layoutType='left-text'\n          wrapMinHeight={450}\n          title={GSData.typeface.title}\n          intro={GSData.typeface.intro}\n          titleStyle={{\n            width: '586px'\n          }}\n        />\n        <div style={isPC ? {\n          height: 550,\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          alignItems: 'baseline'\n        } : {\n            padding: '0 0.25rem',\n            height: '7.8rem'\n          }}\n        >\n          {\n            GSData.typeface.animationList.map((item, index) => (\n              <div key={index} style={isPC ? item.style : item.mobileStyle}>\n                <AnimationPlayer\n                  target={\n                    <img src={!isPC && item.mobileImg ? item.mobileImg : item.img} style={{ position: 'relative' }} />\n                  }\n                  delay={isPC ? 0 : (index * 0.2)}\n                  animations={\n                    [{\n                      from: { opacity: 0, top: '50px' },\n                      to: { opacity: 1, top: 0 }\n                    }]\n                  }\n                />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      <div className=\"layout-1240\">\n        <TextAndAnimation\n          layoutType='right-text'\n          wrapMinHeight={isPC ? 450 : '2.5rem'}\n          title={GSData.colors.title}\n          intro={GSData.colors.intro}\n          titleStyle={{\n            width: '600px'\n          }}\n          wrapStyle={{\n            paddingBottom: 0\n          }}\n        />\n        <div style={{\n          height: 654,\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          marginTop: isPC ? '-200px' : '-0.5rem',\n          marginBottom: 105,\n          padding: isPC ? 0 : '0 0.25rem'\n        }}>\n          {\n            GSData.colors.animationList.map((item, index) => (\n              <div key={index} style={isPC ? { width: 264 } : { width: '45%' }}>\n                <LottieAnimation\n                  options={{\n                    animationData: item.img,\n                  }}\n                />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      <TextAndAnimation\n        layoutType='left-text'\n        {...GSData.grid}\n        titleStyle={{\n          width: '243px'\n        }}\n        animateIcon={GSData.other.grid}\n        mobileAnimationStyle={{\n          width: '100vw',\n          marginLeft: '-0.25rem'\n        }}\n      />\n\n      <div className=\"layout-1240\" style={{ marginBottom: 50 }}>\n        <TextAndAnimation\n          layoutType='up-text'\n          {...GSData.sitemap}\n          titleStyle={{\n            width: '600px'\n          }}\n          wrapMinHeight={isPC ? 1020 : '4.5rem'}\n          animateIcon={GSData.other.sitemap}\n          mobileAnimationStyle={{\n            width: '100vw',\n            marginLeft: '-0.25rem'\n          }}\n        />\n      </div>\n      <CommentsCard commentList={GSData.commentList} />\n    </div>\n  )\n}"],"sourceRoot":""}