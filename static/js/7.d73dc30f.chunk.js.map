{"version":3,"sources":["assets/imgs/contact/Contact-graphic-left.svg","assets/imgs/contact/Contact-graphic-right.svg","scripts/email.js","views/Contact/Form.js","views/Contact/index.js"],"names":["module","exports","sentEmail","name","email","linkedin","project","axios","get","params","then","res","console","log","InputField","React","forwardRef","props","ref","splitFormProps","field","fieldOptions","rest","useField","meta","error","isTouched","isValidating","message","getInputProps","className","type","onSubmitted","useState","isSending","setIsSending","defaultValues","useMemo","linkedIn","useForm","onSubmit","values","a","sendEmail","setTimeout","Form","pushFieldValue","removeFieldValue","isSubmitting","isSubmitted","canSubmit","useEffect","validate","value","placeholder","instance","validateEmail","_","trim","width","height","options","autoplay","animationData","Loading","loop","disabled","GoToArrow","text","test","String","toLowerCase","isSent","setIsSent","isWhite","Header","onClick","history","push","scrollTop","src","LeftBg","RightBg","Footer"],"mappings":"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","file":"static/js/7.d73dc30f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Contact-graphic-left.025d1727.svg\";","module.exports = __webpack_public_path__ + \"static/media/Contact-graphic-right.1fbf30d3.svg\";","import axios from 'axios'\n\n// const sentEmail = (user, house, bookingDate) => {\nconst sentEmail = ({ name, email, linkedin, project }) => {\n  return axios.get('https://us-central1-ilabs3-5792b.cloudfunctions.net/sendEmail', {\n      params: {\n        name,\n        email,\n        linkedin,\n        project\n      }\n    })\n    .then(res => {\n      console.log('res is ', res)\n    })\n}\n\nexport default sentEmail","import React, { useEffect, useState } from 'react'\nimport _ from 'lodash'\nimport GoToArrow from 'components/GoToArrow'\nimport Loading from 'assets/imgs/loading.json'\nimport { LottieAnimation } from 'components/AnimationPlayer'\n\nimport './style.sass'\n\nimport { useForm, useField, splitFormProps } from 'react-form'\nimport sendEmail from 'scripts/email.js'\n\nconst InputField = React.forwardRef((props, ref) => {\n  // Let's use splitFormProps to get form-specific props\n  const [field, fieldOptions, rest] = splitFormProps(props)\n\n  // Use the useField hook with a field and field options\n  // to access field state\n  const {\n    meta: { error, isTouched, isValidating, message },\n    getInputProps,\n  } = useField(field, fieldOptions)\n\n  // Build the field\n  return (\n    <div className='input-wrap'>\n      {rest.type === 'textarea' ? <textarea {...getInputProps({ ref, ...rest })} /> : <input {...getInputProps({ ref, ...rest })} />}\n\n      {/*\n        Let's inline some validation and error information\n        for our field\n      */}\n\n      {isValidating ? (\n        <em className='info'>Validating...</em>\n      ) : isTouched && error ? (\n        <strong className='info'>{error}</strong>\n      ) : message ? (\n        <small className='info'>{message}</small>\n      ) : null}\n    </div>\n  )\n})\n\nexport default ({ onSubmitted = () => {} }) => {\n  const [isSending, setIsSending] = useState(false)\n  const defaultValues = React.useMemo(\n    () => ({\n      name: '',\n      email: '',\n      linkedIn: '',\n      project: '',\n    }),\n    []\n  )\n  const {\n    Form,\n    values,\n    pushFieldValue,\n    removeFieldValue,\n    meta: { isSubmitting, isSubmitted, canSubmit, error },\n  } = useForm({\n    defaultValues,\n    onSubmit: async (values) => {\n      setIsSending(true)\n      await sendEmail(values)\n      setTimeout(() => {\n        setIsSending(false)\n        onSubmitted()\n      }, 500)\n    },\n  })\n\n  useEffect(() => {\n    console.log('isSubmitted', isSubmitted)\n  }, [isSubmitted])\n  return (\n    <Form className='contact-form'>\n      <div>\n        <label>\n          <span>Name *</span>\n          <InputField field='name' validate={value => (!value ? 'Required' : false)} placeholder=\"What's your name?\" />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Email *</span>\n          <InputField\n            field='email'\n            placeholder='Your email'\n            validate={async (value, instance) => {\n              if (!value) {\n                return 'Email is required'\n              }\n\n              if (!validateEmail(_.trim(value))) {\n                return 'Please enter a valid email addresss'\n              }\n\n              console.log(`Checking email: ${value}...`)\n\n              return false\n\n              // We're going to mock that for now\n              // await new Promise(resolve => setTimeout(resolve, 2000));\n            }}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Linkedin</span>\n          <InputField field='linkedin' placeholder='Can you share your Linkedin profile?' />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Project *</span>\n          <InputField field='project' placeholder='Tell us about the project' validate={value => (!value ? 'Required' : false)} type='textarea' />\n        </label>\n      </div>\n\n      {error ? <strong>{error}</strong> : null}\n\n      {isSubmitting || isSending ? (\n        <LottieAnimation\n          width={64}\n          height={64}\n          options={{\n            autoplay: true,\n            animationData: Loading,\n            loop: true,\n          }}\n        />\n      ) : (\n        <div className='btn-wrap'>\n          <button type='submit' disabled={!canSubmit}>\n            <GoToArrow text='Send Message' />\n          </button>\n        </div>\n      )}\n    </Form>\n  )\n}\n\nfunction validateEmail (email) {\n  //var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // var re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  // var re = \"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\"\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n  // return re.test(email);\n}\n","import React, { useState } from 'react'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\nimport Form from './Form'\nimport GoToArrow from 'components/GoToArrow'\nimport history from 'history.js'\nimport LeftBg from 'assets/imgs/contact/Contact-graphic-left.svg'\nimport RightBg from 'assets/imgs/contact/Contact-graphic-right.svg'\nimport { scrollTop } from 'utils'\nimport './style.sass'\nimport Logo from 'components/BrandLogo/index.js'\n\nexport default () => {\n  const [isSent, setIsSent] = useState(false)\n  return (\n    <div className=\"contact-page\">\n      <Logo isWhite={false}/>\n      <Header />\n      <div className=\"contact-wrap\">\n        <div className=\"contact-content\">\n          <div className=\"content-title\">\n            {\n              isSent ?\n                <p>Message sent!</p>\n                :\n                <p>Have a project in mind? <br />Let’s talk.</p>\n            }\n          </div>\n          <div className=\"contact-intro\">\n            {\n              isSent\n                ?\n                <p>\n                  We’ll follow up with you within the next 24 hours.\n                  <br />\n                  In the meantime, take a look at our work.\n                </p>\n                :\n                <p>\n                  We love to collaborate with enthusiastic teams, big or small to create something special.\n                  <br />\n                  We have a tried and tested process to take your ideas/concepts and bring them to life.\n                </p>\n            }\n          </div>\n          {\n            isSent ? <GoToArrow text=\"Our Work\" onClick={() => {\n              history.push('/ourwork')\n            }} /> : <Form onSubmitted={() => {\n              setIsSent(true)\n              scrollTop(0, 500)\n            }} />\n          }\n          {\n            isSent ? (\n              <>\n                <img className=\"bg-left\" src={LeftBg} />\n                <img className=\"bg-right\" src={RightBg} />\n              </>\n            )\n              : null\n          }\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}"],"sourceRoot":""}